## Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#
#
## ===============================
## = JPA / HIBERNATE
## ===============================
#
## Use spring.jpa.properties.* for Hibernate native properties (the prefix is
## stripped before adding them to the entity manager).
#
## Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#
## Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "blog-api"
spring.datasource.url = jdbc:mysql://207.148.120.241:3306/blog-api?useSSL=false

# Username and password
spring.datasource.username = blogapidevuser
spring.datasource.password = Domaybiet!23

server.servlet.context-path=/api

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = create-drop

# Defailt port
server.port=9999

# Api json docs
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger.html